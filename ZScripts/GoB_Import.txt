[VarDef, GoBImport, 0]

[If, GoBImport = 0,

    [NoteBar, "GoZ is importing, Please wait..."]

    // create variables
    [VarDef, objName, "EQ"]
    [VarDef, missingSubtool, 0]
    [VarDef, defaultPath, "C:\Users\Public\Pixologic\GoZProjects\Default\"]
    [VarDef, objPath, [StrMerge, defaultPath, "EQ.GoZ"]]
    [VarDef, diffTexture, [StrMerge, defaultPath, "EQ_diff.bmp"]]
    [VarDef, normTexture, [StrMerge, defaultPath, "EQ_norm.bmp"]]
    [VarDef, dispTexture, [StrMerge, defaultPath, "EQ_disp.bmp"]]

    /* [VarDef, gobSettings, "C:\Users\Public\Pixologic\GoZProjects\Default\GoBSetting.zvr"]
    [VarSave,objName, gobSettings]
    [VarSave,diffTexture, gobSettings]
    [VarSave,normTexture, gobSettings]
    [VarSave,dispTexture, gobSettings]

    [VarLoad,objName, gobSettings]
    [VarLoad,diffTexture, gobSettings]
    [VarLoad,normTexture, gobSettings]
    [VarLoad,dispTexture, gobSettings] */

    //import GoZ object


    [VarDef, subtoolName, ""] // Define a new variable to store the current subtool name 
    [VarDef, subtool(1024), 0] // Define a Variable list to store the subtool active index
    [VarSet, totalSubtools, [SubToolGetCount]] // create a variable to define the number of loop based on the subtools count
    [VarSet, activeSubtool, [SubToolGetActiveIndex]] // create a variable with the current subtool Index




    // Select the first subtool of the Ztool
    [If, activeSubtool == 0,
        [SubToolSelect, 1]
    ]

    //chekc if subtool is missing
    [Loop, totalSubtools,
        [Note, missingSubtool] 
        [SubToolSelect, [Val, n]]
        [VarSet, subtoolName, [IGetTitle, "Tool:ItemInfo"]]   //get the tool name
        [If, ([StrFind, subtoolName, objName]==0) && ([StrLength, subtoolName]==[StrLength, objName]), // subtool not found, create a new one    
            [SubToolSelect, [SubToolLocate, objName]]
            [VarSet, missingSubtool, 0]
        , 
            [VarSet, missingSubtool, 1]  // subtool not found
        ]
        [VarSet, n, n+1]
    ,n]



    // Select the first subtool of the Ztool
    [If, activeSubtool == 0,
        [SubToolSelect, 1]
    ]

    // Loop to fill every subtool until it runs out of subtools
    [Loop, totalSubtools,
        [SubToolSelect, [Val, n]]
        [VarSet, subtoolName, [IGetTitle, "Tool:ItemInfo"]]   //get the tool name

        [Note, [StrMerge, subtoolName, , " <> ", objName]]
        [If, ([StrFind, subtoolName, objName]==0) && ([StrLength, subtoolName]==[StrLength, objName]), // subtool not found, create a new one    
            [SubToolSelect, [SubToolLocate, objName]]
            [If,[FileExists, objPath],
                [FileNameSetNext, objPath]
                [IPress, Tool:Import]
            ]
        ]
        [VarSet, n, n+1]
        ,n]

    [Note, missingSubtool] 
    [If, missingSubtool == 1,
        // subtool exists, update subtool 
        [IPress, Tool:SubTool:Append]
        [IPress, PopUp:PolyMesh3D]
        [IPress, Tool:SubTool:PolyMesh3D1]

        [If,[FileExists, objPath],
            [FileNameSetNext, objPath]
            [IPress, Tool:Import]
        ]
    ]

        // import textures
        /* [IPress,Tool:Texture Map:TextureMap]
        [FileNameSetNext,[StrMerge, defaultPath, "EQ_diff.bmp"]] [IPress,Texture:Import]
        [IPress,Tool:Displacement Map:DisplacementMap]
        [FileNameSetNext,[StrMerge, defaultPath, "EQ_disp.bmp"]] [IPress,Alpha:Import]
        [IPress,Tool:Normal Map:Normal Map]
        [FileNameSetNext,[StrMerge, defaultPath, "EQ_norm.bmp"]] [IPress,Texture:Import] */

      
    
]/*End of ZScript*/
